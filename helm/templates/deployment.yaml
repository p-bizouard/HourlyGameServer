apiVersion: apps/v1
kind: Deployment
metadata:
  name: php
  labels:
    {{- include "hgs.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "hgs.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: php
        {{- include "hgs.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.imagePullSecret }}
      imagePullSecrets: 
      - name: {{ .Values.imagePullSecret }}
      {{- end }}
      serviceAccountName: {{ include "hgs.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: php
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}/php:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: "env"
              mountPath: "/app/.env"
              subPath: ".env"
            - name: "openrc"
              mountPath: "/mnt/.openrc"
              subPath: ".openrc"
            - name: "id-rsa"
              mountPath: "/mnt/id_rsa"
              subPath: "id_rsa"
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        - name: redis
          image: "redis:{{ .Values.image.redis.tag }}"
          command:
            - redis-server
          args:
            - --requirepass
            - "{{ .Values.image.redis.password }}"
          ports:
            - name: redis
              containerPort: 6379
              protocol: TCP
        - name: nginx
          image: "nginx:{{ .Values.image.nginx.tag }}"
          ports:
            - name: nginx
              containerPort: 80
              protocol: TCP
          volumeMounts:
            - name: "nginx-conf"
              mountPath: "/etc/nginx/conf.d/default.conf"
              subPath: "default.conf"
            - name: public-data
              mountPath: /usr/share/nginx/html
              readOnly: true
      initContainers:
        - name: public-data
          image: "{{ .Values.image.repository }}/php:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: [/bin/sh, -c]
          args: ["cp -r /app/public/* /data"]
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: /data
              name: public-data
      volumes:
        - name: public-data
          emptyDir: {}
        - name: "env"
          secret:
            secretName: "{{ .Release.Name }}-secret-env-php"
        - name: "openrc"
          secret:
            secretName: "{{ .Release.Name }}-secret-env-php"
        - name: "id-rsa"
          secret:
            secretName: "{{ .Release.Name }}-secret-env-php"
        - name: nginx-conf
          configMap:
            name: nginx-conf
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
